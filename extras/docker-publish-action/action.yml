name: "Build and publish Docker images for a generic AERIUS Java project"
description: "Build and publish Docker images AERIUS Java project - this is an addition to the main-action"

inputs:
  GITHUB_TOKEN:
    required: true
    description: "Just pass the secrets.GITHUB_TOKEN to this action as input."
  DOCKER_REGISTRY_USERNAME:
    required: true
    description: "The Docker Registry username needed to publish packages."
  DOCKER_REGISTRY_PASSWORD:
    required: true
    description: "The Docker Registry password needed to publish packages."
  DOCKER_IMAGE_NAME:
    required: true
    description: "The Docker image name to use when publishing."
  DOCKER_REGISTRY:
    required: false
    description: "The Docker registry to push to."
    default: "nexus-docker.aerius.nl"
  DOCKER_WORK_DIRECTORY:
    required: false
    description: "The Docker work directory."
    default: "repo"
  DOCKERFILE_LOCATION:
    required: false
    description: "The location of the Dockerfile inside the Docker work directory."
    default: "Dockerfile"
  ROOT_POM_DIRECTORY:
    required: false
    description: "The directory where the root POM can be found."
    default: "repo"
  JDK_VERSION:
    required: false
    description: "The version of the JDK to setup."
    default: 17

runs:
  using: "composite"
  steps:
    - uses: ./aerius-github-actions/common/checkout-java
      with:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        JDK_VERSION: ${{ inputs.JDK_VERSION }}

    - id: get-project-version
      uses: ./aerius-github-actions/common/get-maven-project-version
      with:
        ROOT_POM_DIRECTORY: ${{ inputs.ROOT_POM_DIRECTORY }}

    # Artifacts should only be published if a release is made, otherwise only on pushes with a SNAPSHOT version
    - if: github.event_name == 'release' || (github.event_name == 'push' && endsWith(steps.get-project-version.outputs.VERSION, '-SNAPSHOT'))
      name: Publish Docker image
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: ${{ inputs.DOCKER_IMAGE_NAME }}
        username: ${{ inputs.DOCKER_REGISTRY_USERNAME }}
        password: ${{ inputs.DOCKER_REGISTRY_PASSWORD }}
        registry: ${{ inputs.DOCKER_REGISTRY }}
        workdir: ${{ inputs.DOCKER_WORK_DIRECTORY }}/
        dockerfile: ${{ inputs.DOCKERFILE_LOCATION }}
        tag_semver: true

